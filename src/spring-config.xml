<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 配置c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 配置Hibernate的相关属性,与数据库链接相关的 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置 hibernate属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- 加载hibernate中的映射文件,源代码中是以数组的形式来写的，所以这里用list标签 -->
        <property name="mappingResources">
            <list>
                <value>com/ssh/model/Department.hbm.xml</value>
                <value>com/ssh/model/Employee.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置Action的类 -->
    <!--
        scope="prototype"  默认是singleton，即单例的，只在容器初始化时创建一次
        prototype 是表示在每个调用时都会产生新的实例
     -->
    <bean id="employeeAction" class="com.ssh.action.EmployeeAction" scope="prototype">
        <property name="employeeService" ref="employeeService"></property>
        <property name="departmentService" ref="departmentService"></property>
    </bean>
    <bean id="departmentAction" class="com.ssh.action.DepartmentAction" scope="prototype">
        <property name="departmentService" ref="departmentService"></property>
    </bean>
    <!-- 配置工具类 -->
    <bean id="hibernateUtil" class="com.ssh.util.HibernateUtil">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 配置业务层的类 -->
    <bean id="employeeService" class="com.ssh.service.impl.EmployeeServiceImpl">
        <property name="employeeDao" ref="employeeDao"></property>
    </bean>
    <bean id="departmentService" class="com.ssh.service.impl.DepartmentServiceImpl">
        <property name="departmentDao" ref="departmentDao"></property>
    </bean>
    <!-- 配置DAO的类 -->
    <bean id="employeeDao" class="com.ssh.dao.impl.EmployeeDaoImpl">

        <property name="hibernateUtil" ref="hibernateUtil"></property>
    </bean>
    <bean id="departmentDao" class="com.ssh.dao.impl.DepartmentDaoImpl">

        <property name="hibernateUtil" ref="hibernateUtil"></property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>



</beans>